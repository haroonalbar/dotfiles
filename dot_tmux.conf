# vim style tmux config
# to reset tmux use tmux kill-server
# to start use tmux new-session -s <name>
#

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1


# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

set-option -g default-terminal screen-256color


bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history


bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'
bind-key \\ select-pane -l


# Enable switching between zoomed panes without unzooming using Ctrl+Alt+hjkl
bind -n C-M-h if-shell "[[ #{window_zoomed_flag} -eq 1 ]]" "resize-pane -Z ; select-pane -L ; resize-pane -Z" "select-pane -L"
bind -n C-M-j if-shell "[[ #{window_zoomed_flag} -eq 1 ]]" "resize-pane -Z ; select-pane -D ; resize-pane -Z" "select-pane -D"
bind -n C-M-k if-shell "[[ #{window_zoomed_flag} -eq 1 ]]" "resize-pane -Z ; select-pane -U ; resize-pane -Z" "select-pane -U"
bind -n C-M-l if-shell "[[ #{window_zoomed_flag} -eq 1 ]]" "resize-pane -Z ; select-pane -R ; resize-pane -Z" "select-pane -R"


# to reasize without using bind key
bind -n S-Up run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-W' '+' 'k') || tmux resize-pane -U 5"
bind -n S-Down run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-W' '+' 'j') || tmux resize-pane -D 5"
bind -n S-Left run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-W' '+' 'h') || tmux resize-pane -L 5"
bind -n S-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-W' '+' 'l') || tmux resize-pane -R 5"

bind -n C-M-S-n swap-window -t +1 \; next-window
bind -n C-M-S-b swap-window -t -1 \; previous-window
bind -n C-M-n next-window
bind -n C-M-b previous-window

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# set-window-option -g other-pane-height 25
# set-window-option -g other-pane-width 81
# set-window-option -g display-panes-time 1500
# set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key q display-panes
# bind-key c new-window -c '#{pane_current_path}'
bind-key c new-window
bind-key n next-window
bind-key N previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0



set -g @plugin 'tmux-plugins/'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/sensible'
# for restore and save
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'


# save every 10 min
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'
set -g @resurrect-dir '~/.tmux/resurrect'
set -g @continuum-save-script '~/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh'

set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'

# for floating panes
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'omerxx/tmux-floax'
# M- means "hold Meta/Alt"
set -g @floax-bind '-n C-M-p'
set -g @floax-bind-menu 'P'
set -g @floax-width '80%'
set -g @floax-height '80%'
set -g @floax-border-color 'magenta'
set -g @floax-text-color 'blue'
set -g @floax-change-path 'true'
set -g @floax-session-name 'float'

set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# Theme
set -g @plugin 'catppuccin/tmux#v1.0.1'
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#(basename \"$(tmux display-message -p '#{pane_current_path}')\") "
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#(basename \"$(tmux display-message -p '#{pane_current_path}')\") "
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#(realpath --relative-to=~/projects \"$(tmux display-message -p '#{pane_current_path}')\")"
set -g window-status-format "#(realpath --relative-to=~/projects \"$(tmux display-message -p '#{pane_current_path}')\")"
set -g status-left ""
set -g status-right ' #[fg=blue]%l:%M %p#[default]   '


run '~/.tmux/plugins/tpm/tpm' 

# renumber-windows
set-option -g renumber-windows on

# Toggle
bind-key h set-option status
bind-key e set-option -g status-position
