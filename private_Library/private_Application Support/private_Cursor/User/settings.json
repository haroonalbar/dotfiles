{
    "tabnine.experimentalAutoImports": true,
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "workbench.iconTheme": "material-icon-theme",
    "git.autofetch": true,
    "python.formatting.provider": "black",
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "atomKeymap.promptV3Features": true,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.formatOnPaste": true,
    "redhat.telemetry.enabled": false,
    "terminal.integrated.defaultProfile.windows": "profile",
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "Git Bash": {
            "source": "Git Bash"
        },
        "profile": {
            "path": "C:\\WINDOWS\\System32\\cmd.exe",
            "args": []
        }
    },
    "extensions.autoUpdate": "onlyEnabledExtensions",
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.profiles.linux": {
        "bash": {
            "path": "/usr/bin/flatpak-spawn",
            "args": [
                "--host",
                "--env=TERM=xterm-256color",
                "bash"
            ]
        }
    },
    "workbench.colorTheme": "Everforest Dark",
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.formatOnSave": true,
    "settingsSync.ignoredExtensions": [
        "asvetliakov.vscode-neovim",
        "nagytech.harpoon"
    ],
    "emmet.includeLanguages": {
        "njk": "html",
        "liquid": "html"
    },
    "eslint.run": "onSave",
    "nxConsole.showNodeVersionOnStartup": false,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "editor.accessibilitySupport": "on",
    "accessibility.signals.lineHasError": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.lineHasFoldedArea": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.lineHasBreakpoint": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.lineHasInlineSuggestion": {
        "sound": "off"
    },
    "accessibility.signals.terminalQuickFix": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.onDebugBreak": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.noInlayHints": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.taskCompleted": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.taskFailed": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.terminalCommandFailed": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.notebookCellCompleted": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.notebookCellFailed": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.diffLineInserted": {
        "sound": "off"
    },
    "accessibility.signals.diffLineDeleted": {
        "sound": "off"
    },
    "accessibility.signals.diffLineModified": {
        "sound": "off"
    },
    "accessibility.signals.lineHasWarning": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.terminalBell": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.chatRequestSent": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.chatResponseReceived": {
        "sound": "off"
    },
    "accessibility.signals.clear": {
        "sound": "off",
        "announcement": "off"
    },
    "go.formatTool": "gofmt",
    "go.toolsManagement.autoUpdate": true,
    "go.vetOnSave": "package",
    "[go]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        }
    },
    "[go.mod]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        }
    },
    "accessibility.signals.progress": {
        "sound": "off",
        "announcement": "off"
    },
    "cSpell.userWords": [
        "godotenv"
    ],
    "remote.SSH.defaultExtensions": [
        "gitpod.gitpod-remote-ssh"
    ],
    "remote.SSH.remotePlatform": {
        "*.gitpod.io": "linux"
    },
    "accessibility.signals.voiceRecordingStarted": {
        "sound": "off"
    },
    "accessibility.signals.positionHasWarning": {
        "sound": "off",
        "announcement": "off"
    },
    "workbench.settings.applyToAllProfiles": [
        "accessibility.signals.voiceRecordingStopped"
    ],
    "accessibility.signals.voiceRecordingStopped": {
        "sound": "off"
    },
    "accessibility.signals.terminalCommandSucceeded": {
        "sound": "off",
        "announcement": "off"
    },
    "[html]": {
        "editor.defaultFormatter": "NikolaosGeorgiou.html-fmt-vscode"
    },
    "[gotmpl]": {
        "editor.defaultFormatter": "golang.go"
    },
    "claude.lang": "en",
    "pieces.cloudCapabilities": "Blended",
    "pieces.telemetry": false,
    "workbench.activityBar.location": "bottom",
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "cSpell.enabled": false,
    "gitlens.mode.active": "zen",
    "editor.inlineSuggest.suppressSuggestions": true,
    "cody.autocomplete.enabled": false,
    "terminal.explorerKind": "external",
    "terminal.external.osxExec": "Kitty.app",
    "audioCues.enabled": "off",
    "leetcode.workspaceFolder": "/Users/haroonalbar/.local/share/nvim/leetcode",
    "leetcode.defaultLanguage": "golang",
    "leetcode.hint.configWebviewMarkdown": false,
    "leetcode.hint.commentDescription": false,
    "keyrunner-lite-by-liam.folderLocation": "/Users/haroonalbar/Library/Application Support/Code/User/globalStorage/keyrunner-lite-by-liam"
}